name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-type-check:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install types-requests types-psutil
        pip install pre-commit
        pip install pip-audit

    - name: Run security audit
      run: |
        pip-audit --format json --output audit-results.json || true
        if [ -f audit-results.json ] && [ "$(jq '.vulnerabilities | length' audit-results.json)" -gt 0 ]; then
          echo "Security vulnerabilities found:"
          jq '.vulnerabilities[] | {name: .name, version: .version, description: .advisory.description}' audit-results.json
          exit 1
        else
          echo "No security vulnerabilities found"
        fi

    - name: Run pre-commit hooks
      run: |
        pre-commit run --all-files --show-diff-on-failure

    - name: Check schema version
      run: |
        python -m ztb.ops.check_schema_version

    - name: Check no .py files in ztb/scripts/
      run: |
        if [ "$(find ztb/scripts -name "*.py" | wc -l)" -gt 0 ]; then
          echo "Error: Python files found in ztb/scripts/. Only shell scripts allowed."
          find ztb/scripts -name "*.py"
          exit 1
        fi

    - name: Smoke test module imports
      run: |
        python -c "import importlib; importlib.import_module('ztb.ops.cli')"
        python -c "import importlib; importlib.import_module('ztb.training.run_1m')"
        python -c "import importlib; importlib.import_module('ztb.training.supervise_1m')"

    - name: Run linting
      run: |
        flake8 ztb/

    - name: Run type checking
      run: |
        mypy ztb/ --strict --exclude 'tests/'

  unit-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.13']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install types-requests types-psutil

    - name: Run unit tests
      run: |
        npm run test:unit

  leakage-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install types-requests types-psutil

    - name: Run leakage detection tests
      run: |
        python -m pytest tests/test_no_lookahead.py -v

  integration-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install types-requests types-psutil

    - name: Run integration tests
      run: |
        npm run test:int-fast

  smoke-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install types-requests types-psutil

    - name: Run smoke test with memory profiling
      run: |
        export PYTHONPATH="${PYTHONPATH}:$(pwd)"
        export ZTB_MEM_PROFILE=1
        python ztb/experiments/smoke_test.py --steps 1000 --dataset synthetic

    - name: Run benchmark smoke test
      run: |
        export PYTHONPATH="${PYTHONPATH}:$(pwd)"
        python -c "
        import time
        start = time.time()
        # Simple benchmark smoke test
        from ztb.core.market import Market
        from ztb.core.strategies.base_strategy import BaseStrategy
        market = Market()
        strategy = BaseStrategy(market)
        # Run a few steps
        for i in range(10):
            strategy.update()
        end = time.time()
        print(f'Benchmark smoke test completed in {end - start:.2f} seconds')
        "

    - name: Upload memory profile
      uses: actions/upload-artifact@v4
      with:
        name: memory-profile-${{ github.run_id }}
        path: |
          memory_profile_*.csv
          logs/**/*.jsonl
        retention-days: 30
