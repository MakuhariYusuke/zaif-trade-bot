name: TS Prune (Unused Exports)

on:
  workflow_dispatch: {}
  pull_request:
    paths:
      - 'src/**/*.ts'
      - 'tsconfig.json'
  push:
    branches:
      - ci/run-ts-prune
    paths:
      - 'src/**/*.ts'
      - 'tsconfig.json'

permissions:
  contents: read
  pull-requests: write

jobs:
  scan-unused:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install deps
        run: npm ci
      - name: Run ts-prune
        run: |
          npx ts-prune -p tsconfig.json > ts-prune.txt || true
          # Convert to JSON array for easier consumption
          node -e "const fs=require('fs'); const lines=(fs.readFileSync('ts-prune.txt','utf8')||'').split(/\r?\n/).filter(Boolean); fs.writeFileSync('ts-prune.json', JSON.stringify(lines, null, 2));"
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ts-prune-report
          path: |
            ts-prune.txt
            ts-prune.json
      - name: Comment summary on PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let lines = [];
            try { lines = JSON.parse(fs.readFileSync('ts-prune.json','utf8')); } catch {}
            const count = lines.length;
            const head = lines.slice(0, 20).map(l=>`- ${l}`).join('\n');
            const more = count>20 ? `\nâ€¦and ${count-20} more` : '';
            const body = `### ts-prune: Unused Exports\n\nFound: ${count}\n\n${head}${more}`;
            await github.rest.issues.createComment({ owner: context.repo.owner, repo: context.repo.repo, issue_number: context.issue.number, body });
