{
  "name": "zaif-trade-bot",
  "version": "2.0.0",
  "main": "dist/index.js",
  "ts-node": {
    "require": [
      "tsconfig-paths/register"
    ]
  },
  "scripts": {
  "tool": "ts-node src/tools/run.ts",
    "start": "ts-node src/index.ts",
    "build": "tsc && tsc-alias",
  "dash": "cross-env LOG_JSON=1 ts-node src/tools/metrics-dash.ts",
  "health": "ts-node src/tools/live/health.ts",
  "mock:scenario": "ts-node src/tools/paper/mock-scenario.ts",
  "mock:smoke": "ts-node src/tools/paper/mock-smoke.ts",
  "smoke:once": "ts-node src/tools/paper/smoke-once.ts",
  "test:flow": "ts-node __tests__/helpers/test-flow.ts",
  "test:min-trade": "ts-node src/tools/live/test-minimal-trade.ts",
  "test:mock:trade": "ts-node __tests__/helpers/mock.trade.ts",
  "test:zaif": "ts-node src/tools/live/test-zaif.ts",
  "test:coincheck": "ts-node src/tools/live/test-coincheck.ts",
  "test:coincheck:flow": "ts-node src/tools/live/test-coincheck-flow.ts",
  "balance": "ts-node src/tools/balance.ts",
  "stats:today": "ts-node src/tools/stats/stats-today.ts",
  "stats:graph": "ts-node src/tools/stats/stats-graph.ts --out stats.json --svg stats.svg",
  "ci:nightly": "npm run paper:reset && SET EXCHANGE=paper&& SET USE_PRIVATE_MOCK=0&& SET DRY_RUN=1&& SET TEST_MODE=1&& SET TEST_FLOW_QTY=0.001&& ts-node src/tools/paper/mock-scenario.ts && ts-node __tests__/helpers/test-flow.ts && ts-node src/tools/stats/stats-graph.ts --out stats.json --svg stats.svg && ts-node src/tools/stats/stats-today.ts --diff > stats-diff.json",
  "paper:reset": "ts-node src/tools/paper/paper-reset.ts",
  "ci:paper:verify": "npm run stats:today -- --diff && npm run mock:scenario && npm run test:flow && npm run stats:today -- --diff",
  "nonce:bump": "ts-node src/tools/nonce-bump.ts",
  "ml:simulate": "ts-node src/tools/ml/ml-simulate.ts",
  "ml:export": "ts-node src/tools/ml/ml-export.ts",
  "ml:search": "ts-node src/tools/ml/ml-search.ts",
  "feature:importance": "ts-node src/tools/ml/feature-importance.ts",
  "stats:mc": "ts-node src/tools/stats/monte-carlo.ts",
  "report:summary": "ts-node src/tools/report-summary.ts",
  "trend:weekly": "ts-node src/tools/trend-weekly.ts",
  "test:min-live": "ts-node src/tools/live/test-minimal-live.ts",
  "live:minimal": "ts-node src/tools/live-minimal.ts",
  "test": "vitest run --coverage --reporter=default --reporter=json --outputFile=vitest-report.json",
  "test:unit": "vitest run __tests__/unit/utils __tests__/unit/helpers __tests__/unit/tools __tests__/unit/contracts __tests__/unit/core --reporter=json --outputFile=vitest-report-unit.json",
  "test:integration-fast": "vitest run __tests__/unit/services __tests__/unit/adapters/position-store-fs.sanity.test.ts --reporter=json --outputFile=vitest-report-integration.json",
  "test:cb-rate": "vitest run __tests__/unit/circuit-breaker.test.ts __tests__/unit/adapters/base-service.cb.exec.test.ts __tests__/unit/adapters/base-service.cb.private.test.ts __tests__/unit/rate-limiter.category.test.ts __tests__/unit/rate-limiter.metrics.details.test.ts __tests__/unit/rate-limiter.metrics.test.ts __tests__/unit/rate-limiter.test.ts __tests__/unit/integration.api.rate.metrics.test.ts __tests__/unit/integration.api.rate.test.ts --reporter=json --outputFile=vitest-report-cb-rate.json",
  "test:event-metrics": "vitest run __tests__/unit/execution-service.events.test.ts __tests__/unit/events __tests__/unit/metrics-dash.watch.test.ts --reporter=json --outputFile=vitest-report-event-metrics.json",
  "test:long": "cross-env LONG_TESTS=1 vitest run __tests__/unit/integration.api.rate.heavy.test.ts __tests__/unit/rate-limiter.throughput.test.ts --reporter=json --outputFile=vitest-report-long.json",
  "test:integration": "cross-env EXCHANGE=paper DRY_RUN=1 USE_PRIVATE_MOCK=1 TEST_MODE=1 TEST_FLOW_QTY=0.001 npm run mock:scenario && ts-node src/tools/stats/stats-today.ts --diff > stats-diff.json && ts-node __tests__/helpers/test-flow.ts && ts-node src/tools/stats/stats-today.ts --diff > stats-diff-2.json && npm run ml:export && cross-env ML_MAX_WORKERS=1 PAIRS=btc_jpy npm run ml:search && ts-node __tests__/helpers/integration-assert.ts",
  "ci:test": "npm run test && npm run test:integration",
  "ci:test:full": "npm run test && npm run test:integration && npm run stats:today -- --diff"
  },
  "dependencies": {
    "axios": "^1.7.7",
    "dotenv": "^16.4.5"
  },
  "devDependencies": {
    "@types/node": "^20.19.13",
    "@vitest/coverage-v8": "^1.6.0",
    "cross-env": "^7.0.3",
  "tsc-alias": "^1.8.9",
  "tsconfig-paths": "^4.2.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.9.2",
  "vite": "^5.4.0",
  "vite-tsconfig-paths": "^5.1.2",
  "vitest": "^1.6.0"
  },
  "description": "Zaif 公開/プライベート API を用いた最小限のシステムトレードボット雛形です。",
  "keywords": [],
  "author": "",
  "license": "ISC",
  "type": "commonjs"
}
