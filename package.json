{
  "name": "zaif-trade-bot",
  "version": "3.1.0",
  "main": "dist/index.js",
  "ts-node": {
    "require": [
      "tsconfig-paths/register"
    ]
  },
  "scripts": {
    "tool": "ts-node archived/ts_legacy/src/tools/run.ts",
    "start": "ts-node archived/ts_legacy/src/index.ts",
    "build": "tsc && tsc-alias",
    "dash": "cross-env LOG_JSON=1 ts-node archived/ts_legacy/src/tools/metrics-dash.ts",
    "health": "ts-node archived/ts_legacy/src/tools/live/health.ts",
    "mock:scenario": "ts-node archived/ts_legacy/src/tools/paper/mock-scenario.ts",
    "mock:smoke": "ts-node archived/ts_legacy/src/tools/paper/mock-smoke.ts",
    "smoke:once": "ts-node archived/ts_legacy/src/tools/paper/smoke-once.ts",
    "test:flow": "ts-node archived/ts_legacy/__tests__/helpers/test-flow.ts",
    "test:min-trade": "ts-node archived/ts_legacy/src/tools/live/test-minimal-trade.ts",
    "test:mock:trade": "ts-node archived/ts_legacy/__tests__/helpers/mock.trade.ts",
    "test:zaif": "ts-node archived/ts_legacy/src/tools/live/test-zaif.ts",
    "test:coincheck": "ts-node archived/ts_legacy/src/tools/live/test-coincheck.ts",
    "test:coincheck:flow": "ts-node archived/ts_legacy/src/tools/live/test-coincheck-flow.ts",
    "balance": "ts-node archived/ts_legacy/src/tools/balance.ts",
    "stats:today": "ts-node archived/ts_legacy/src/tools/stats/stats-today.ts",
    "stats:graph": "ts-node archived/ts_legacy/src/tools/stats/stats-graph.ts --out stats.json --svg stats.svg",
    "ci:nightly": "npm run paper:reset ; SET EXCHANGE=paper; SET USE_PRIVATE_MOCK=0; SET DRY_RUN=1; SET TEST_MODE=1; SET TEST_FLOW_QTY=0.001; ts-node archived/ts_legacy/src/tools/paper/mock-scenario.ts ; ts-node archived/ts_legacy/__tests__/helpers/test-flow.ts ; ts-node archived/ts_legacy/src/tools/stats/stats-graph.ts --out stats.json --svg stats.svg ; ts-node archived/ts_legacy/src/tools/stats/stats-today.ts --diff > stats-diff.json",
    "paper:reset": "ts-node archived/ts_legacy/src/tools/paper/paper-reset.ts",
    "ci:paper:verify": "npm run stats:today -- --diff && npm run mock:scenario && npm run test:flow && npm run stats:today -- --diff",
    "nonce:bump": "ts-node archived/ts_legacy/src/tools/nonce-bump.ts",
    "ml:simulate": "ts-node archived/ts_legacy/src/tools/ml/ml-simulate.ts",
    "ml:export": "ts-node archived/ts_legacy/src/tools/ml/ml-export.ts",
    "ml:search": "ts-node archived/ts_legacy/src/tools/ml/ml-search.ts",
    "ml:collect": "cross-env LOG_TRACE=1 ts-node archived/ts_legacy/src/ml/etl/run-collect.ts",
    "ml:export:rl": "ts-node archived/ts_legacy/src/ml/export/run-export.ts",
    "feature:importance": "ts-node archived/ts_legacy/src/tools/ml/feature-importance.ts",
    "stats:mc": "ts-node archived/ts_legacy/src/tools/stats/monte-carlo.ts",
    "report:summary": "ts-node archived/ts_legacy/src/tools/report-summary.ts",
    "trend:weekly": "ts-node archived/ts_legacy/src/tools/trend-weekly.ts",
    "trade:live": "ts-node archived/ts_legacy/src/tools/trade-live.ts",
    "trade:live:dry": "cross-env DRY_RUN=1 ts-node archived/ts_legacy/src/tools/trade-live.ts --dry-run",
    "slack:summary": "ts-node archived/ts_legacy/src/tools/slack-summary.ts",
    "test:min-live": "ts-node archived/ts_legacy/src/tools/live/test-minimal-live.ts",
    "live:minimal": "ts-node archived/ts_legacy/src/tools/live-minimal.ts",
    "test": "vitest run --coverage --reporter=default --reporter=json --outputFile=vitest-report.json",
    "test:coverage": "vitest run --coverage --reporter=default --reporter=json --outputFile=vitest-report.json",
    "test:unit": "vitest run archived/ts_legacy/__tests__/unit/utils archived/ts_legacy/__tests__/unit/helpers archived/ts_legacy/__tests__/unit/tools archived/ts_legacy/__tests__/unit/contracts archived/ts_legacy/__tests__/unit/core --reporter=default --reporter=json --outputFile=vitest-report-unit.json",
    "test:integration-fast": "vitest run archived/ts_legacy/__tests__/unit/services archived/ts_legacy/__tests__/unit/adapters/position-store-fs.sanity.test.ts archived/ts_legacy/__tests__/integration --reporter=default --reporter=json --outputFile=vitest-report-integration.json",
    "test:int-fast": "npm run -s test:integration-fast",
    "test:cb-rate": "vitest run __tests__/unit/circuit-breaker.test.ts __tests__/unit/adapters/base-service.cb.exec.test.ts __tests__/unit/adapters/base-service.cb.private.test.ts __tests__/unit/rate-limiter.category.test.ts __tests__/unit/rate-limiter.metrics.details.test.ts __tests__/unit/rate-limiter.metrics.test.ts __tests__/unit/rate-limiter.test.ts __tests__/unit/integration.api.rate.metrics.test.ts __tests__/unit/integration.api.rate.test.ts --reporter=default --reporter=json --outputFile=vitest-report-cb-rate.json",
    "test:event-metrics": "vitest run __tests__/unit/execution-service.events.test.ts __tests__/unit/events __tests__/unit/metrics-dash.watch.test.ts --reporter=default --reporter=json --outputFile=vitest-report-event-metrics.json",
    "test:long": "cross-env LONG_TESTS=1 vitest run __tests__/unit/integration.api.rate.heavy.test.ts __tests__/unit/rate-limiter.throughput.test.ts --reporter=default --reporter=json --outputFile=vitest-report-long.json",
    "test:integration": "cross-env EXCHANGE=paper DRY_RUN=1 USE_PRIVATE_MOCK=1 TEST_MODE=1 TEST_FLOW_QTY=0.001 npm run mock:scenario && ts-node src/tools/stats/stats-today.ts --diff > stats-diff.json && ts-node __tests__/helpers/test-flow.ts && ts-node src/tools/stats/stats-today.ts --diff > stats-diff-2.json && npm run ml:export && cross-env ML_MAX_WORKERS=1 PAIRS=btc_jpy npm run ml:search && ts-node __tests__/helpers/integration-assert.ts",
    "test:py": "python -m pytest tests/ -v --tb=short",
    "test:py:unit": "python -m pytest tests/test_backtest.py tests/test_risk.py -v --tb=short",
    "test:py:integration": "python -m pytest tests/test_live.py -v --tb=short",
    "ci:test": "npm run test && npm run test:integration",
    "ci:test:full": "npm run test && npm run test:integration && npm run stats:today -- --diff",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "format": "prettier --write src/**/*.ts",
    "type-check": "tsc --noEmit",
    "mypy": "mypy ztb/",
    "pre-commit": "pre-commit run --all-files",
    "lint:py": "flake8 ztb/ python/",
    "type-check:py": "mypy ztb/ python/",
    "format:py": "black ztb/ python/ && isort ztb/ python/",
    "clean:tmp": "node -e \"const fs=require('fs');const path='.';for(const f of fs.readdirSync(path)){if(f.startsWith('tmp-')||f.startsWith('tmp_test_')){try{fs.rmSync(f,{recursive:true,force:true})}catch{}}}for(const f of fs.readdirSync('.')){if(/^vitest-report.*json$/.test(f)){try{fs.unlinkSync(f)}catch{}}}\"",
    "pretest": "npm run -s clean:tmp"
  },
  "dependencies": {
    "axios": "^1.12.0",
    "dotenv": "^16.4.5",
    "parquets": "^0.10.10",
    "zod": "^4.1.9"
  },
  "devDependencies": {
    "@types/node": "^20.19.13",
    "@typescript-eslint/eslint-plugin": "^8.44.0",
    "@typescript-eslint/parser": "^8.44.0",
    "@vitest/coverage-v8": "^3.2.4",
    "cross-env": "^7.0.3",
    "eslint": "^8.57.1",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-prettier": "^5.5.4",
    "markdownlint-cli": "^0.45.0",
    "prettier": "^3.6.2",
    "ts-node": "^10.9.2",
    "ts-prune": "^0.10.3",
    "tsc-alias": "^1.8.9",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.9.2",
    "vite": "^7.1.5",
    "vite-tsconfig-paths": "^5.1.2",
    "vitest": "^3.2.4"
  },
  "description": "Zaif 公開/プライベート API を用いた最小限のシステムトレードボット雛形です。",
  "keywords": [],
  "author": "",
  "license": "ISC",
  "type": "commonjs"
}
